set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
let python_highlight_all=1
syntax on

"backspace over everything in insert mode
set backspace=indent,eol,start

" enable filetype dectection and ft specific plugin/indent
"filetype plugin indent on
filetype plugin on

" enable syntax hightlight and completion
"syntax on

" search
set hlsearch
set incsearch
set number

set ignorecase
set smartcase

" When editing a file, always jump to the last cursor position
autocmd BufReadPost *
      \ if ! exists("g:leave_my_cursor_position_alone") |
      \     if line("'\"") > 0 && line ("'\"") <= line("$") |
      \         exe "normal g'\"" |
      \     endif |
      \ endif

" w!! to sudo & write a file
cmap w!! %!sudo tee >/dev/null %

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" eggcache vim
nnoremap ; :
:command W w
:command WQ wq
:command Wq wq
:command Q q
:command Qa qa
:command QA qa

" config python vim
let g:pydiction_location='~/.vim/tools/pydiction/complete-dict' 
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif

" for ycm
let g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
" YouCompleteMe 功能  
" 补全功能在注释中同样有效  
let g:ycm_complete_in_comments=1  
" 允许 vim 加载 .ycm_extra_conf.py 文件，不再提示  
let g:ycm_confirm_extra_conf=0  
" 开启 YCM 基于标签引擎  
let g:ycm_collect_identifiers_from_tags_files=1  
" 引入 C++ 标准库tags，这个没有也没关系，只要.ycm_extra_conf.py文件中指定了正确的标准库路径                                                                               
set tags+=/data/misc/software/misc./vim/stdcpp.tags  
" YCM 集成 OmniCppComplete 补全引擎，设置其快捷键  
"inoremap <leader>; <C-x><C-o>  
"inoremap <leader>. <C-x><C-o>  
"inoremap <leader><leader> <C-x><C-o>
" 补全内容不以分割子窗口形式出现，只显示补全列表  
set completeopt-=preview  
" 从第一个键入字符就开始罗列匹配项  
let g:ycm_min_num_of_chars_for_completion=1  
" 禁止缓存匹配项，每次都重新生成匹配项  
"let g:ycm_cache_omnifunc=0  
" 语法关键字补全              
let g:ycm_seed_identifiers_with_syntax=1  
" 修改对C函数的补全快捷键，默认是CTRL + space，修改为ALT + ;  
let g:ycm_key_invoke_completion = '<M-;>'  
" 设置转到定义处的快捷键为ALT + G，这个功能非常赞  
nmap <M-g> :YcmCompleter GoToDefinitionElseDeclaration <C-R>=expand("<cword>")<CR><CR>                                 
let g:pymode_rope_completion = 0
"let g:ycm_python_binary_path = 'python'
"let g:EclimCompletionMethod = 'omnifunc'

"for powerline
set rtp+=/usr/local/lib/python2.7/dist-packages/powerline/bindings/vim/
"Always show statusline
set laststatus=2
" Use 256 colours (Use this setting only if your terminal supports 256 colours)    
set t_Co=256
